@model Bibliotheek.Domain.Entities.Boek

@{
    ViewBag.Title = "NewBoek";
}

<h2>NewBoek</h2>

@using (Html.BeginForm("CreateBoekOrExemplaar","Boek",null,FormMethod.Post)) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Boek</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Isbn.Nummer)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Isbn.Nummer)
            @Html.ValidationMessageFor(model => model.Isbn.Nummer)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Titel)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Titel)
            @Html.ValidationMessageFor(model => model.Titel)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Samenvatting)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Samenvatting)
            @Html.ValidationMessageFor(model => model.Samenvatting)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Auteurs)
        </div>
            @if(Model!=null){
                if(Model.Auteurs.LongCount()>0){
                    <div id="auteurs">
                        @foreach (var a in Model.Auteurs) { 
                            @Html.DisplayFor(model => a.Familienaam) @:&nbsp;
                            @Html.DisplayFor(model => a.Voornaam)
                        
                        }
                        <br />
                    </div>
                
                }else{
                    <div id="auteurs">
                        <p>Nog geen auteurs in de db.</p>

                        <table id="inputs">
                            <thead>
                                <tr>
                                    <th>Voornaam</th>
                                    <th>Familienaam</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        <input id="textboxVoornaam" type='text'/>
                                    </td>
                                    <td>
                                        <input id="textboxFamilienaam" type='text'/>
                                    </td>
                                    <td>
                                        <input type="button" value="+" onclick="addAuteur()" />
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                }
            }
        <div class="editor-label">
            @Html.LabelFor(model => model.Uitgever)
        </div>
        <div class="editor-label">
            @Html.EditorFor(model => model.Uitgever.Naam)
            @Html.ValidationMessageFor(model => model.Uitgever.Naam)
        </div>

        <div class="editor-field">
            <label for="aantalEx">Aantal exemplaren:</label><input type="number" name="aantalEx" id="aantalEx" />
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        //$(function () {
        //    $("#inputs input[type='button']").click(add)
        //});

        function addAuteur() {
            alert('rr')
        }

        //function addRow() {
        //    var inputs = $('#inputs').find('tbody')
        //        .append($('<tr>').append($('<td>').append($("<input type='text'/>")))
        //           .append($('<td>').append($("<input type='text'/>")))
        //           .append($('<td>').append($("<input type='button' value='+' onclick='addRow()'/>"))
        //                .append($("<input type='button' value='x' onclick='addRow()'/>")
        //            )
        //        )
        //    );
            
        //}

        @*function addOrCreateAuteur() {
            var data = {
                Boek: '@Model',
                Voornaam: $('#Voornaam').val(),
                FamilieNaam: $('#Familienaam').val()
                
            };
            //alert(JSON.stringify(data));
            $.ajax({
                url: '@Url.Action("AddOrCreate","Auteur")',
                type: 'POST',
                data:{"strJson": "'" + JSON.stringify(data) + "'"},
                success: function (result) {
                    alert(result);
                }
            });
        }*@
    </script>
}
